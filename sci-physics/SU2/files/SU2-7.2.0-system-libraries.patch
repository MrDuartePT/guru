--- a/meson.build
+++ b/meson.build
@@ -10,7 +10,7 @@
 python = pymod.find_installation()
 
 su2_cpp_args = []
-su2_deps     = [declare_dependency(include_directories: 'externals/CLI11')]
+su2_deps     = [declare_dependency(include_directories: '/usr/include/CLI')]
 
 default_warning_flags = []
 if build_machine.system() != 'windows'
@@ -52,7 +52,7 @@
 endif
 
 if get_option('enable-autodiff') or get_option('enable-directdiff')
-  codi_dep = [declare_dependency(include_directories: 'externals/codi/include')]
+  codi_dep = [declare_dependency(include_directories: '/usr/include/codi')]
   codi_rev_args = ['-DCODI_REVERSE_TYPE']
   codi_for_args = ['-DCODI_FORWARD_TYPE']
 endif
@@ -69,7 +69,8 @@
 
 # add cgns library
 if get_option('enable-cgns')
-  subdir('externals/cgns')
+  cpp = meson.get_compiler('cpp')
+  cgns_dep = cpp.find_library('cgns')
   su2_deps     += cgns_dep
   su2_cpp_args += '-DHAVE_CGNS'
 endif
@@ -91,23 +92,19 @@
   su2_deps += mpi_dep
   su2_cpp_args += '-DHAVE_MPI'
 
-  # compile metis
-  subdir('externals/metis')
-
   # add metis dependency
+  metis_dep = dependency('metis')
   su2_deps     += metis_dep
   su2_cpp_args += '-DHAVE_METIS'
 
-  # compile parmetis
-  subdir('externals/parmetis')
-
   # add parmetis dependency
+  parmetis_dep = dependency('parmetis')
   su2_deps     += parmetis_dep
   su2_cpp_args += '-DHAVE_PARMETIS'
 
   # add medi dependency
   if get_option('enable-autodiff') or get_option('enable-directdiff')
-    codi_dep += declare_dependency(include_directories: ['externals/medi/include', 'externals/medi/src'])
+    codi_dep += declare_dependency(include_directories: ['/usr/share/MeDiPack/include', '/usr/share/MeDiPack/src'])
   endif
 endif
 
@@ -117,7 +114,7 @@
 
   # add opdi dependency
   if get_option('enable-autodiff')
-    codi_dep += declare_dependency(include_directories: 'externals/opdi/include')
+    codi_dep += declare_dependency(include_directories: '/usr/include/opdi')
 
     if get_option('opdi-backend') == 'macro'
       su2_cpp_args += '-DFORCE_OPDI_MACRO_BACKEND'
@@ -185,14 +182,10 @@
 
 if get_option('enable-librom')
    
-   assert(get_option('librom_root')!='',
-       'Must specify librom folder (-Dlibrom_root=path/to/libROM)')
-   
    su2_cpp_args += '-DHAVE_LIBROM'
 
-   librom_root = get_option('librom_root')
-   librom_dep = declare_dependency(include_directories: librom_root,
-                                   link_args: ['-L'+librom_root+'/build', '-lROM'])
+   librom_dep = declare_dependency(include_directories: '/usr/include/libROM',
+                                   link_args: ['-lROM'])
 
    su2_deps += librom_dep
 
@@ -205,19 +198,17 @@
   endif
 endforeach
 
-catch2_dep = declare_dependency(include_directories: 'externals/catch2/')
+catch2_dep = declare_dependency(include_directories: '/usr/include/catch2/')
 
 if get_option('enable-mpp')
-  cmake = import('cmake')
-  mpp_subproj = cmake.subproject('Mutationpp')
-  mpp_dep = mpp_subproj.dependency('mutation++')
+  mpp_dep = dependency('mutation++')
   su2_deps     += mpp_dep
   su2_cpp_args += '-DHAVE_MPP'
 endif
 
 if omp and get_option('enable-autodiff')
   py = find_program('python3','python')
-  p = run_command(py, 'externals/opdi/syntax/check.py', 'su2omp.syntax.json', 'Common', 'SU2_CFD', '-p', '*.hpp', '*.cpp', '*.inl', '-r', '-q')
+  p = run_command(py, '/usr/share/OpDiLib/syntax/check.py', 'su2omp.syntax.json', 'Common', 'SU2_CFD', '-p', '*.hpp', '*.cpp', '*.inl', '-r', '-q')
   if p.returncode() != 0
     error(p.stdout())
   endif
@@ -280,20 +271,4 @@
            get_option('enable-autodiff'), get_option('enable-directdiff'), get_option('enable-pywrapper'), get_option('enable-mkl'),
            get_option('enable-openblas'), get_option('enable-pastix'), get_option('enable-mixedprec'), get_option('enable-librom'), meson.build_root().split('/')[-1]))
 
-if get_option('enable-mpp')
-  message(''' To run SU2 with Mutation++ library, add these lines to your .bashrc file:
-
-          export MPP_DATA_DIRECTORY=$SU2_HOME/subprojects/Mutationpp/data
-          export LD_LIBRARY_PATH=$SU2_HOME/<build_dir>/subprojects/Mutationpp
-
-          ''')
-endif
-
-if get_option('enable-librom')
-  message(''' To run SU2 with libROM library, add this line to your .bashrc file:
-
-          export LD_LIBRARY_PATH=@0@/build/:$LD_LIBRARY_PATH
-          
-          '''.format(get_option('librom_root')))
-
 endif
--- a/SU2_CFD/include/solvers/CSolver.hpp
+++ b/SU2_CFD/include/solvers/CSolver.hpp
@@ -57,9 +57,9 @@
 #include "../variables/CVariable.hpp"
 
 #ifdef HAVE_LIBROM
-#include "BasisGenerator.h"
-#include "QDEIM.h"
-#include "DEIM.h"
+#include "linalg/BasisGenerator.h"
+#include "hyperreduction/QDEIM.h"
+#include "hyperreduction/DEIM.h"
 #endif
 
 using namespace std;
--- a/SU2_CFD/include/SU2_CFD.hpp
+++ b/SU2_CFD/include/SU2_CFD.hpp
@@ -29,7 +29,7 @@
 
 #include "../../Common/include/parallelization/mpi_structure.hpp"
 #include "../../Common/include/parallelization/omp_structure.hpp"
-#include "CLI11.hpp"
+#include "CLI.hpp"
 
 #include "drivers/CDriver.hpp"
 #include "drivers/CSinglezoneDriver.hpp"
--- a/SU2_GEO/include/SU2_GEO.hpp
+++ b/SU2_GEO/include/SU2_GEO.hpp
@@ -38,7 +38,7 @@
 
 #include "../../Common/include/geometry/CPhysicalGeometry.hpp"
 #include "../../Common/include/CConfig.hpp"
-#include "../../../Common/include/grid_movement/CSurfaceMovement.hpp"
-#include "../../../Common/include/grid_movement/CFreeFormDefBox.hpp"
+#include "../../Common/include/grid_movement/CSurfaceMovement.hpp"
+#include "../../Common/include/grid_movement/CFreeFormDefBox.hpp"
 
 using namespace std;
