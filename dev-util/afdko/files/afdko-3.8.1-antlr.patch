--- a/c/makeotf/lib/hotconv/CMakeLists.txt
+++ b/c/makeotf/lib/hotconv/CMakeLists.txt
@@ -68,8 +68,8 @@
 )
 
 set_property(TARGET hotconv PROPERTY C_STANDARD 99)
-target_include_directories(hotconv PRIVATE AFTER $<$<COMPILE_LANGUAGE:CXX>:${ANTLR4_INCLUDE_DIRS}>)
-target_link_libraries(hotconv PUBLIC antlr4_static)
+target_include_directories(hotconv PUBLIC /usr/include/antlr4-runtime)
+target_link_libraries(hotconv PUBLIC -lantlr4-runtime)
 
 if ( CMAKE_COMPILER_IS_GNUCC )
     target_compile_options(hotconv PRIVATE -Wall -Wno-attributes)
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -27,23 +27,6 @@
 
 list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
 
-# Antlr 4 configuration
-
-# This is an alternate way of supplying the Antlr 4 sources that will override
-# the git clone of the tag listed below. This is especially useful if you
-# encounter compiler problems and need to make small edits to compensate. Start
-# with the Antlr project's sources, e.g.
-# https://www.antlr.org/download/antlr4-cpp-runtime-4.9.2-source.zip
-# set(ANTLR4_ZIP_REPOSITORY "/path_to_antlr4_archive/a4.zip")
-
-add_definitions(-DANTLR4CPP_STATIC)
-set(ANTLR4_WITH_STATIC_CRT OFF)
-# Use slightly more recent commit than 4.9.2 to deal with utfcpp test
-# compilation problems
-# set(ANTLR4_TAG tags/4.9.2)
-set(ANTLR4_TAG 916f03366edf15bf8b50010b11d479c189bf9f96)
-include(ExternalAntlr4Cpp)
-
 # sanitizer support
 # work around https://github.com/pypa/setuptools/issues/1928 with environment
 # variable
