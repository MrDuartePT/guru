--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -296,7 +296,8 @@
 if(DEFINED EVPATH_USE_UDT4)
   option(EVPATH_USE_UDT4 "Build the udt4 transport" "${EVPATH_USE_UDT4}")
   if(EVPATH_USE_UDT4)
-    find_package(udt4 4.11 REQUIRED)
+    find_package(PkgConfig REQUIRED)
+    pkg_check_modules(UDT4 REQUIRED udt)
   endif()
 else()
   find_package(udt4 4.11)
@@ -309,17 +310,18 @@
   set(RUN_UDT4_TESTS FALSE)   # DON'T TEST.  UDT4 NOT USEFUL
   if(EVPATH_TRANSPORT_MODULES)
     add_library(cmudt4 MODULE cmudt4.cpp ip_config.c)
+    target_include_directories(cmudt4 PRIVATE ${UDT4_INCLUDE_DIRS})
     set_target_properties(cmudt4 PROPERTIES
       OUTPUT_NAME ${EVPATH_LIBRARY_PREFIX}cmudt4)
 
-    target_link_libraries(cmudt4 evpath udt4::udt4)
+    target_link_libraries(cmudt4 evpath ${UDT4_LIBRARIES})
     list(APPEND EVPATH_TRANSPORT_TARGETS cmudt4)
   else()
     target_sources(EVPath PRIVATE cmudt4.cpp)
-    target_link_libraries(EVPath PRIVATE udt4::udt4)
-    _pkg_get_target_prefix(udt4::udt4 udt4_PREFIX)
-    list(APPEND _pkg_config_pfxs "${udt4_PREFIX}")
-    list(APPEND _pkg_config_private_reqs "udt4 >= ${udt4_VERSION}")
+    target_link_libraries(EVPath PRIVATE ${UDT4_LIBRARIES})
+    target_include_directories(EVPath PRIVATE ${UDT4_INCLUDE_DIRS})
+    list(APPEND _pkg_config_pfxs "${UDT4_PREFIX}")
+    list(APPEND _pkg_config_private_reqs "udt >= ${UDT4_VERSION}")
   endif()
 endif()
 
