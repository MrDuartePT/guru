# Copyright (c) 2020 The Meson development team

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

project('imgui', 'cpp',
    version: '1.81',
    license: 'MIT',
)

include_dirs = include_directories('.', 'backends')
sources = ['imgui_demo.cpp', 'imgui_draw.cpp', 'imgui_tables.cpp', 'imgui_widgets.cpp', 'imgui.cpp']

cpp = meson.get_compiler('cpp')
dependencies = []

# renderer backends
dx9_dep = cpp.find_library('d3d9', required: get_option('dx9'))
if dx9_dep.found()
    sources += 'backends/imgui_impl_dx9.cpp'
    dependencies += dx9_dep
endif
dx10_dep = cpp.find_library('d3d10', required: get_option('dx10'))
if dx10_dep.found()
    sources += 'backends/imgui_impl_dx10.cpp'
    dependencies += dx10_dep
endif
dx11_dep = cpp.find_library('d3d11', required: get_option('dx11'))
if dx11_dep.found()
    sources += 'backends/imgui_impl_dx11.cpp'
    dependencies += dx11_dep
endif
dx12_dep = cpp.find_library('d3d12', required: get_option('dx12'))
if dx12_dep.found()
    sources += 'backends/imgui_impl_dx12.cpp'
    dependencies += dx12_dep
endif
metal_dep = cpp.find_library('metal', required: get_option('metal'))
if get_option('metal').enabled()
    sources += 'backends/imgui_impl_metal.mm'
    dependencies += metal_dep
endif
glew_dep = dependency('glew', required: get_option('opengl'))
if glew_dep.found()
    sources += 'backends/imgui_impl_opengl3.cpp'
    dependencies += glew_dep
endif
vulkan_dep = dependency('vulkan', required: get_option('vulkan'))
if vulkan_dep.found()
    sources += 'backends/imgui_impl_vulkan.cpp'
    dependencies += vulkan_dep
endif

# platform backends
glfw_dep = dependency('glfw3', required: get_option('glfw'))
if glfw_dep.found()
    sources += 'backends/imgui_impl_glfw.cpp'
    dependencies += glfw_dep
endif
sdl2_dep = dependency('sdl2', required: get_option('sdl2'))
if sdl2_dep.found()
    sources += 'backends/imgui_impl_sdl.cpp'
    dependencies += sdl2_dep
endif
if get_option('osx').enabled() or (get_option('osx').auto() and target_machine.system() == 'darwin')
    sources += 'backends/imgui_impl_osx.mm'
endif
if get_option('win').enabled() or (get_option('win').auto() and target_machine.system() == 'windows')
    sources += 'backends/imgui_impl_win32.cpp'
endif

# frameworks
allegro5_dep = dependency('allegro5', required: get_option('allegro5'))
if allegro5_dep.found()
    sources += 'backends/imgui_impl_allegro5.cpp'
    dependencies += allegro5_dep
endif
marmalade_dep = cpp.find_library('marmalade', required: get_option('marmalade'))
if marmalade_dep.found()
    sources += 'backends/imgui_impl_marmalade.cpp'
    dependencies += marmalade_dep
endif

imgui = library('imgui',
    sources,
    dependencies: dependencies,
    include_directories: include_dirs,
    version: meson.project_version(),
    install: true
)

pkg_mod = import('pkgconfig')
pkg_mod.generate(imgui,
  description : 'Dear ImGui: Bloat-free Graphical User interface for C++ with minimal dependencies'
)

install_headers(
    'imconfig.h',
    'imgui.h',
    'imgui_internal.h',
    'imstb_rectpack.h',
    'imstb_textedit.h',
    'imstb_truetype.h',
    'backends/imgui_impl_dx9.h',
    'backends/imgui_impl_osx.h',
    'backends/imgui_impl_sdl.h',
    'backends/imgui_impl_dx10.h',
    'backends/imgui_impl_dx11.h',
    'backends/imgui_impl_dx12.h',
    'backends/imgui_impl_glfw.h',
    'backends/imgui_impl_glut.h',
    'backends/imgui_impl_wgpu.h',
    'backends/imgui_impl_metal.h',
    'backends/imgui_impl_win32.h',
    'backends/imgui_impl_vulkan.h',
    'backends/imgui_impl_opengl2.h',
    'backends/imgui_impl_opengl3.h',
    'backends/imgui_impl_allegro5.h',
    'backends/imgui_impl_marmalade.h',
    subdir: 'imgui')

imgui_dep = declare_dependency(include_directories: include_dirs, link_with: imgui)
